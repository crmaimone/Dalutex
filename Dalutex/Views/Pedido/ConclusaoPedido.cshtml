@model Dalutex.Models.ConclusaoPedidoViewModel
@using Dalutex.Models;

@{
    ViewBag.Title = "CONCLUSÃO DE PEDIDO" ;
}
@Styles.Render("~/Content/bootstrap-table")

<div class="header-title"><h3>@ViewBag.Title</h3></div>
<div class="container">
    <div class="row">
        <div class="col-md-12">
            @if (!ViewBag.CarrinhoVazio)
            {
                <section id="ConclusaoForm">
                    @using (Html.BeginForm("ConclusaoPedido", "Pedido", null, FormMethod.Post, new { @class = "form-horizontal pull-left", role = "form" }))
                    {
                        @Html.AntiForgeryToken()

                        @Html.ValidationSummary(false, "", new { @class = "text-danger" })                                                

                        <div class="table-responsive">
                            <table class="table">
                                <thead>
                                    <tr>
                                        <th></th>
                                        <th></th>
                                        <th></th>
                                    </tr>
                                </thead>
                                <tbody>
                                    <tr>
                                        <td style="padding-top:0px">@Html.LabelFor(x => x.DescTipoPedido, new { @class = "control-label" }):&nbsp;</td>
                                        <td colspan="2"> <strong>@Model.DescTipoPedido </strong> </td>
                                    </tr>

                                    <tr>
                                        <td>@Html.LabelFor(x => x.Representante):&nbsp;</td>
                                        <td><a href="@Url.Action("Representantes", "Cadastro")" class="btn btn-default btn"><span class="glyphicon glyphicon-pencil"></span> </a></td>
                                        <td>@Model.Representante.NOME</td>
                                    </tr>
                                    <tr>
                                        <td>@Html.LabelFor(x => x.ClienteFatura):&nbsp;</td>
                                        <td><a href="@Url.Action("ClientesFatura", "Cadastro")" class="btn btn-default btn"><span class="glyphicon glyphicon-pencil"></span> </a></td>
                                        <td>@Model.ClienteFatura.NOME</td>
                                    </tr>
                                        @if (Model.IDTipoPedido != (int)Enums.TiposPedido.RESERVA)
                                        {
                                            <tr>                                       
                                                <td>@Html.LabelFor(x => x.ClienteEntrega):&nbsp;</td>
                                                <td><a href="@Url.Action("ClientesEntrega", "Cadastro")" class="btn btn-default btn"><span class="glyphicon glyphicon-pencil"></span> </a></td>
                                                <td>@Model.ClienteEntrega.NOME</td>                                        
                                            </tr>
                                            <tr>
                                                <td>@Html.LabelFor(x => x.Transportadora):&nbsp;</td>
                                                <td><a href="@Url.Action("Transportadora", "Cadastro")" class="btn btn-default btn"><span class="glyphicon glyphicon-pencil"></span> </a></td>
                                                <td>@Model.Transportadora.NOME</td>
                                            </tr>
                                            <tr>
                                                <td>@Html.LabelFor(x => x.QualidadeComercial):&nbsp;</td>
                                                <td><a href="@Url.Action("QualidadeComercial", "Cadastro")" class="btn btn-default btn"><span class="glyphicon glyphicon-pencil"></span> </a></td>
                                                <td>@Model.QualidadeComercial.Value</td>
                                            </tr>
                                            <tr>
                                                <td>@Html.LabelFor(x => x.Moeda):&nbsp;</td>
                                                <td><a href="@Url.Action("Moeda", "Cadastro")" class="btn btn-default btn"><span class="glyphicon glyphicon-pencil"></span> </a></td>
                                                <td>@Model.Moeda.NOMEMOEDA</td>
                                            </tr>
                                            <tr>
                                                <td>@Html.LabelFor(x => x.CondicaoPagto):&nbsp;</td>
                                                <td><a href="@Url.Action("CondicaoPgto", "Cadastro")" class="btn btn-default btn"><span class="glyphicon glyphicon-pencil"></span> </a></td>
                                                <td>@Model.CondicaoPagto.DESCRI_COND</td>
                                            </tr>
                                            <tr>
                                                <td>@Html.LabelFor(x => x.CanailVenda):&nbsp;</td>
                                                <td><a href="@Url.Action("CanalVendas", "Cadastro")" class="btn btn-default btn"><span class="glyphicon glyphicon-pencil"></span> </a></td>
                                                <td>@Model.CanailVenda.DESCRICAO</td>
                                            </tr>
                                            <tr>
                                                <td>@Html.LabelFor(x => x.ViaTransporte):&nbsp;</td>
                                                <td><a href="@Url.Action("ViaTransporte", "Cadastro")" class="btn btn-default btn"><span class="glyphicon glyphicon-pencil"></span> </a></td>
                                                <td>@Model.ViaTransporte.DESCRICAO</td>
                                            </tr>
                                            <tr>
                                                <td>@Html.LabelFor(x => x.Frete):&nbsp;</td>
                                                <td><a href="@Url.Action("Frete", "Cadastro")" class="btn btn-default btn"><span class="glyphicon glyphicon-pencil"></span> </a></td>
                                                <td>@Model.Frete.DESCRICAO</td>
                                            </tr>
                                            <tr>
                                                <td>@Html.LabelFor(x => x.TipoAtendimento):&nbsp;</td>
                                                <td><a href="@Url.Action("TipoAtendimento", "Cadastro")" class="btn btn-default btn"><span class="glyphicon glyphicon-pencil"></span> </a></td>
                                                <td>@Model.TipoAtendimento.DESCRI_ATEND</td>
                                            </tr>
                                            
                                            if (Model.IDTipoPedido == (int)Enums.TiposPedido.ESPECIAL)
                                            {                                                                                            
                                                <tr>
                                                    <td>@Html.LabelFor(x => x.NFRefat, new { @class = "control-label" }):&nbsp;</td>
                                                    <td colspan ="2">
                                                        @Html.TextBoxFor(x => x.NFRefat, new { @class = "form-control", @id = "txtNFRefat", @value = Model.NFRefat})
                                                        @Html.ValidationMessageFor(x => x.NFRefat, "", new { @class = "text-danger" })
                                                    </td>
                                                </tr>

                                                <tr>
                                                    <td>@Html.LabelFor(x => x.PedidoRefat, new { @class = "control-label" }):&nbsp;</td>
                                                    <td colspan="2">
                                                        @Html.TextBoxFor(x => x.PedidoRefat, new { @class = "form-control", @id = "txtPedidoRefat", @value = Model.PedidoRefat })
                                                        @Html.ValidationMessageFor(x => x.PedidoRefat, "", new { @class = "text-danger" })
                                                    </td>
                                                </tr>                                            
                                            }

                                            @*<tr>
                                                <td>@Html.LabelFor(x => x.PedidoCliente, new { @class = "control-label" }):&nbsp;</td>
                                                <td colspan="2">
                                                    @Html.TextBoxFor(x => x.PedidoCliente, new { @class = "form-control", @id = "txtPedidoCliente", @value = Model.PedidoCliente.GetValueOrDefault().ToString() })
                                                    @Html.ValidationMessageFor(x => x.PedidoCliente, "", new { @class = "text-danger" })
                                                </td>
                                            </tr>*@


                                            <tr>
                                                <td>@Html.LabelFor(x => x.PedidoClienteSt, new { @class = "control-label" }):&nbsp;</td>
                                                <td colspan="2">
                                                    @Html.TextBoxFor(x => x.PedidoClienteSt, new { @class = "form-control", @id = "txtPedidoClienteSt", @value = Model.PedidoClienteSt})
                                                    @Html.ValidationMessageFor(x => x.PedidoClienteSt, "", new { @class = "text-danger" })
                                                </td>
                                            </tr>

                                            <tr>
                                                <td>@Html.LabelFor(x => x.Observacoes, new { @class = "control-label" }):&nbsp;</td>
                                                <td colspan="2">
                                                    @Html.TextAreaFor(x => x.Observacoes, 0, 0, new { @style = "width:100%; Height:90px;", @id = "txtObservacoes", @value=Model.Observacoes })
                                                    @Html.ValidationMessageFor(m => m.Observacoes, "", new { @class = "text-danger" })
                                                </td>
                                            </tr>
                                        }
                                </tbody>
                            </table>
                        </div>
                        <hr />                        
                        <div class="form-group">
                            <div class="col-md-12">
                                @Html.HiddenFor(x => x.IDTipoPedido)

                                <button type="submit" class="btn btn-success pull-left"><span class="glyphicon glyphicon-arrow-right" aria-hidden="true"></span>&nbsp;PROSSEGUIR</button>
                                <span class="pull-left">&nbsp;</span>
                                @if (Model.IDTipoPedido != (int)Enums.TiposPedido.RESERVA)
                                {
                                    <a href="@Url.Action("Transportadora", "Cadastro", new
                                        {
                                            IDTransportadora = Model.Transportadora.IDTRANSPORTADORA
                                        })" class="btn btn-default pull-left">
                                        <span class="glyphicon glyphicon-arrow-left" aria-hidden="true"></span>&nbsp;VOLTAR
                                    </a>
                                }
                                else
                                {                                                                                                            
                                    <a href="@Url.Action("ClientesFatura", "Cadastro", new
                                        {
                                            IDRepresentante = Model.Representante.IDREPRESENTANTE,
                                            IDClienteFatura = Model.ClienteFatura.ID_CLIENTE
                                        })" class="btn btn-default pull-left">
                                        <span class="glyphicon glyphicon-arrow-left" aria-hidden="true"></span>&nbsp;VOLTAR
                                    </a>
                               }
                            </div>
                        </div>
                        }
                </section>
            }
            else
            {
                <h5>Seu carrinho está vazio.</h5>
                <a href="@Url.Action("Index", "Home")" class="btn btn-info pull-left">
                    <span class="glyphicon glyphicon-home" aria-hidden="true"></span>&nbsp;HOME
                </a>
            }
        </div>
    </div>
    @if (!ViewBag.CarrinhoVazio && Model.IDTipoPedido != (int)Enums.TiposPedido.RESERVA)
    {
        <hr />

        <table id="listaCarrinho">
            <thead>
                <tr>                    
                    <th data-field="Artigo" data-sortable="true">Artigo</th>
                    <th data-field="Tecnologia" data-sortable="true">Tecnologia</th>
                    <th data-field="Desenho" data-sortable="true">Desenho</th>
                    <th data-field="Variante" data-sortable="true">Variante</th>
                    <th data-field="Cor" data-sortable="true">Cor</th>
                    <th data-field="Compose" data-sortable="true">Compose</th>
                    <th data-field="Pecas" data-sortable="true">Peças</th>
                    <th data-field="UnidadeMedida" data-sortable="true">UM</th>
                    <th data-field="Quantidade" data-sortable="true">Qtde</th>
                    
                    @*<th data-field="PrecoTabela" data-sortable="true" data-formatter="scriptWrapper.currencyFormatter">Preço tabela</th>*@
                    
                    <th data-field="Preco" data-sortable="true" data-formatter="scriptWrapper.currencyFormatter">Unit.</th>
                    <th data-field="ValorTotalItem" data-sortable="true" data-formatter="scriptWrapper.currencyFormatter">Sub total</th>

                    <th data-field="DataEntregaItem" data-sortable="true" data-formatter="scriptWrapper.dateFormatter">Prev. entrega</th>                   
                    <th data-field="DtItemSolicitada" data-sortable="true" data-formatter="scriptWrapper.dateFormatter">Data Solicitada</th>                                         
                </tr>
            </thead>
            <tfoot>
                <tr>
                    <th>Itens:</th>
                    <th id="thQuantidadeItens"></th>
                    <th></th>
                    <th colspan="4"></th>
                    <th><strong>Total:</strong></th>
                    <th>@Model.TotalPedido.ToString("c")</th>
                </tr>
            </tfoot>
        </table>
    }
</div>
@section Scripts {
    @Scripts.Render("~/bundles/bootstrap-table")
    <script>
        $(document).ready(function () {
            //API
            scriptWrapper = (function () {

                //API Attributes

                //API Methods
                lstCanais_Change = function () {
                    if ($("#lstCanaisVenda > option:selected").attr("value") == 4) {
                        $('#elemGerentes').show();
                    }
                    else {
                        $('#elemGerentes').hide();
                    }
                }

                currencyFormatter = function (value) {
                    if (value != null)
                    {
                        return 'R$ ' + value.toFixed(2).replace('.', ',');
                    }
                    else
                    {
                        return 'R$ -';
                    }
                }

                dateFormatter = function (value) {
                    if (value != null) {
                        var data = new Date(value.match(/\d+/)[0] * 1);

                        return data.getDate() + "/" + (data.getMonth() + 1) + "/" + data.getFullYear();
                    }
                    else {
                        return '-';
                    }
                }

                salvarComplemento = function (value) {
                    $.ajax({
                        type: 'POST',
                        url: '@Url.Action("AtualizaComplentoPedido", "Pedido")',
                        data: 'numPedidoCliente=' + $('#txtPedidoCliente').val() + '&observacoes=' + $('#txtObservacoes').val() + 'numPedidoClienteSt=' + $('#txtPedidoClienteSt').val(),
                        async: false,
                    });
                }

                obterPedidoRefat = function (value) {
                    var $txtNFRefat = $('#txtNFRefat');
                    if ($txtNFRefat.val())
                    {
                        $.ajax({
                            type: 'GET',
                            url: '@Url.Action("obterPedidoRefat", "Pedido")',
                            data: 'nf=' + $txtNFRefat.val(),
                            success: function (result) {
                                $('#txtPedidoRefat').val(result);
                            }
                        });
                    }
                }

                obterNFRefat = function (value) {
                    var $txtPedidoRefat = $('#txtPedidoRefat');
                    if ($txtPedidoRefat.val()) {
                        $.ajax({
                            type: 'GET',
                            url: '@Url.Action("obterNFRefat", "Pedido")',
                            data: 'pedido=' + $txtPedidoRefat.val(),
                            success: function (result) {
                                $('#txtNFRefat').val(result);
                            }
                        });
                    }
                }

                // public API
                return {
                    lstCanais_Change: lstCanais_Change,
                    currencyFormatter: currencyFormatter,
                    dateFormatter: dateFormatter,
                    salvarComplemento: salvarComplemento,
                    obterNFRefat: obterNFRefat,
                    obterPedidoRefat: obterPedidoRefat
                };
            })();

            //Init
            (function Init() {
                $('#lstQualidades').selectpicker();
                $('#lstTiposPgto').selectpicker();
                $('#lstMoedas').selectpicker();
                $('#lstFretes').selectpicker();
                $('#lstLocaisVenda').selectpicker();
                $('#lstCanaisVenda').selectpicker();
                $('#lstCanaisVenda').change(lstCanais_Change);
                $('#lstGerentes').selectpicker();
                $('#lstTiposAtendimento').selectpicker();
                $('#lstViasTransp').selectpicker();
                $('#elemGerentes').hide();

                $('#listaCarrinho').bootstrapTable({
                    url: 'ObterItensCarrinho',
                    method: 'GET',
                    onLoadSuccess: function (data) {
                        $("#thQuantidadeItens").html(data.length);
                    },
                });

                $('#txtPedidoCliente').focusout(scriptWrapper.salvarComplemento);
                $('#txtPedidoClienteSt').focusout(scriptWrapper.salvarComplemento);
                $('#txtObservacoes').focusout(scriptWrapper.salvarComplemento);

                $('#txtPedidoRefat').focusout(scriptWrapper.obterNFRefat);
                $('#txtNFRefat').focusout(scriptWrapper.obterPedidoRefat);

            })();
        });
    </script>
    }
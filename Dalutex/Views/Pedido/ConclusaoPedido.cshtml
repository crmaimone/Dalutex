@model Dalutex.Models.ConclusaoPedidoViewModel
@using Dalutex.Models;

@{
    ViewBag.Title = "CONCLUSÃO DE PEDIDO";
}
@Styles.Render("~/Content/dataTables")

<div class="panel panel-default"> <h3>@ViewBag.Title</h3> </div>

<div class="container">
    <div class="row">
        <div class="col-md-12">
            <section id="ConclusaoForm">
                @using (Html.BeginForm("ConclusaoPedido", "Pedido", null, FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
                {
                    @Html.AntiForgeryToken()
                    
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                    <div class="form-group">
                        @Html.LabelFor(x => x.QualidadeComercial, new { @class = "col-md-3 control-label" })
                        <div class="col-md-9">
                            @Html.DropDownListFor(m => m.IDQualidadeComercial, new SelectList(Model.QualidadeComercial, "key", "Value"), "Selecione", new { @id = "lstQualidades" })
                            @Html.ValidationMessageFor(m => m.QualidadeComercial, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(x => x.Moedas, new { @class = "col-md-3 control-label" })
                        <div class="col-md-9">
                            @Html.DropDownListFor(m => m.IDMoedas, new SelectList(Model.Moedas, "CODIGOMOEDA", "NOMEMOEDA"), "Selecione", new { @id = "lstMoedas" })
                            @Html.ValidationMessageFor(m => m.Moedas, "", new { @class = "text-danger" })
                        </div>
                    </div>
                                        
                    <div class="form-group">
                        @Html.LabelFor(x => x.CondicoesPagto, new { @class = "col-md-3 control-label" })
                        <div class="col-md-9">
                            @Html.DropDownListFor(m => m.IDCondicoesPagto, new SelectList(Model.CondicoesPagto, "ID_COND", "DESCRI_COND"), "Selecione", new { @id = "lstTiposPgto" })
                            @Html.ValidationMessageFor(m => m.CondicoesPagto, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    
                    <div class="form-group">
                        @Html.LabelFor(x => x.CanaisVenda, new { @class = "col-md-3 control-label" })
                        <div class="col-md-9">
                            @Html.DropDownListFor(m => m.IDCanaisVenda, new SelectList(Model.CanaisVenda, "CANAL_VENDA", "DESCRICAO"), "Selecione", new { @id = "lstCanaisVenda" })
                            @Html.ValidationMessageFor(m => m.CanaisVenda, "", new { @class = "text-danger" })
                        </div>
                    </div> 
                    
                    <div class="form-group">
                        @Html.LabelFor(x => x.ViasTransporte, new { @class = "col-md-3 control-label" })
                        <div class="col-md-9">
                            @Html.DropDownListFor(m => m.IDViasTransporte, new SelectList(Model.ViasTransporte, "VIATRANSPORTE", "DESCRICAO"), "Selecione", new { @id = "lstViasTransp" })
                            @Html.ValidationMessageFor(m => m.ViasTransporte, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    
                    <div class="form-group">
                        @Html.LabelFor(x => x.Fretes, new { @class = "col-md-3 control-label" })
                        <div class="col-md-9">
                            @Html.DropDownListFor(m => m.IDFretes, new SelectList(Model.Fretes, "TIPOFRETE", "DESCRICAO"), "Selecione", new { @id = "lstFretes" })
                            @Html.ValidationMessageFor(m => m.Fretes, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    
                    @*<div class="form-group">
                        @Html.LabelFor(x => x.LocaisVenda, new { @class = "col-md-3 control-label" })
                        <div class="col-md-9">
                            @Html.DropDownListFor(m => m.IDLocaisVenda, new SelectList(Model.LocaisVenda, "CODIGO", "DESCRICAO"), "Selecione", new { @id = "lstLocaisVenda" })
                            @Html.ValidationMessageFor(m => m.IDLocaisVenda, "", new { @class = "text-danger" })
                        </div>
                    </div>*@
                    
                    @*<div class="form-group" id="elemGerentes">
                        @Html.LabelFor(x => x.GerentesVenda, new { @class = "col-md-3 control-label" })
                        <div class="col-md-9">
                            @Html.DropDownListFor(m => m.IDGerentesVenda, new SelectList(Model.GerentesVenda, "GERENTE", "DESCRICAO"), "Selecione", new { @id = "lstGerentes" })
                            @Html.ValidationMessageFor(m => m.IDGerentesVenda, "", new { @class = "text-danger" })
                        </div>
                    </div>*@
                    
                    <div class="form-group">
                        @Html.LabelFor(x => x.TiposAtendimento, new { @class = "col-md-3 control-label" })
                        <div class="col-md-9">
                            @Html.DropDownListFor(m => m.IDTiposAtendimento, new SelectList(Model.TiposAtendimento, "COD_ATEND", "DESCRI_ATEND"), "Selecione", new { @id = "lstTiposAtendimento" })
                            @Html.ValidationMessageFor(m => m.TiposAtendimento, "", new { @class = "text-danger" })
                        </div>
                    </div>
                                       
                    <div class="form-group">
                        @Html.LabelFor(x => x.Observacoes, new { @class = "col-md-3 control-label" })
                        <div class="col-md-9">
                            @Html.TextAreaFor(x => x.Observacoes, 0, 0, new { @style = "width:100%; Height:90px;" })
                            @Html.ValidationMessageFor(m => m.Observacoes, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <hr />
                    <div class="form-group">
                        <div class="col-md-12">
                            @Html.ActionLink("VOLTAR", @Url.Action("Transportadora", "Cadastro"), "Pedido", new { IDTransportadora = Model.IDTransportadora }, new { @class = "btn btn-default btn-warning right" })
                            <input type="submit" value="CONFIRMAR" class="btn btn-default left"/>
                        </div>
                    </div>
                }
            </section>
        </div>
    </div>
    <hr />

    <table id="example" class="table table-striped table-bordered" cellspacing="0" style="width:100%;">
        <thead>
            <tr>
                <th>ARTIGO</th>
                <th>TECNOL</th>
                <th>DESENHO</th>
                <th>VARIANTE</th>                
                <th>PÇS</th>
                <th>UM</th>
                <th>QTDE</th>
                <th>UNIT.</th>
                <th>SUB TOTAL</th>
            </tr>
        </thead>
        <tbody>
            @if (Model.Itens != null)
            {
                decimal _Total = 0;
                decimal _qtde;
                decimal _valor;
                 
                foreach (InserirNoCarrinhoViewModel item in Model.Itens)
                {
                    _qtde = item.Quantidade;
                    _valor = item.Preco;

                    _Total = (_qtde * _valor);
                    <tr>
                        <th>@item.Artigo</th>
                        <th>@item.TecnologiaPorExtenso</th>
                        <th>@item.Desenho</th>
                        <th>@item.Variante</th>                        
                        <th>@item.Pecas</th>
                        <th>@item.UnidadeMedida</th>
                        <th>@item.Quantidade</th>
                        <th>@item.Preco.ToString("c")</th>
                        <th>@item.ValorTotalItem.ToString("c")</th>
                    </tr>
                }
            }
        </tbody>

        <tfoot>
            <tr>
                <th>QUANTIDADE DE ITENS:</th>
                <th>@Model.Itens.Count.ToString()</th>
                <th colspan="4"></th>
                <th><strong>TOTAL:</strong></th>
                <th>@Model.TotalPedido.ToString("c")</th>
            </tr>
        </tfoot>
    </table>
</div>
@section Scripts {
    @Scripts.Render("~/bundles/dataTables")
    <script>
        $(document).ready(function () {
            //API
            scriptWrapper = (function () {

                //API Attributes

                //API Methods
                lstCanais_Change = function () {
                    if ($("#lstCanaisVenda > option:selected").attr("value") == 4) {
                        $('#elemGerentes').show();
                    }
                    else {
                        $('#elemGerentes').hide();
                    }
                }

                // public API
                return {
                    lstCanais_Change: lstCanais_Change
                };
            })();

            //Init
            (function Init() {
                $('#lstQualidades').selectpicker();
                $('#lstTiposPgto').selectpicker();
                $('#lstMoedas').selectpicker();
                $('#lstFretes').selectpicker();
                $('#lstLocaisVenda').selectpicker();
                $('#lstCanaisVenda').selectpicker();
                $('#lstCanaisVenda').change(lstCanais_Change);
                $('#lstGerentes').selectpicker();
                $('#lstTiposAtendimento').selectpicker();
                $('#lstViasTransp').selectpicker();
                $('#elemGerentes').hide();

                $('#example').dataTable();
            })();
        });
    </script>
}
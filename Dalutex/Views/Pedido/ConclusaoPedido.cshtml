@model Dalutex.Models.ConclusaoPedidoViewModel
@using Dalutex.Models;

@{
    ViewBag.Title = "CONCLUSÃO DE PEDIDO";
}
@Styles.Render("~/Content/bootstrap-table")

<div class="header-title"><h3>@ViewBag.Title</h3></div>
<div class="container">
    <div class="row">
        <div class="col-md-12">
            @if (!ViewBag.CarrinhoVazio)
            {
                <div>
                    @Html.LabelFor(x => x.Representante):&nbsp;
                    <a href="@Url.Action("Representantes", "Cadastro")" class="btn btn-default btn"><span class="glyphicon glyphicon-pencil"></span> </a>
                    @Model.Representante.NOME
                    
                </div>
                <div>
                    @Html.LabelFor(x => x.ClienteFatura):&nbsp;
                    <a href="@Url.Action("ClientesFatura", "Cadastro")" class="btn btn-default btn"><span class="glyphicon glyphicon-pencil"></span> </a>
                    @Model.ClienteFatura.NOME                    
                </div>
                <div>
                    @Html.LabelFor(x => x.ClienteEntrega):&nbsp;
                    <a href="@Url.Action("ClientesEntrega", "Cadastro")" class="btn btn-default btn"><span class="glyphicon glyphicon-pencil"></span> </a>
                    @Model.ClienteEntrega.NOME                    
                </div>
                <div>
                    @Html.LabelFor(x => x.Transportadora):&nbsp;
                    <a href="@Url.Action("Transportadora", "Cadastro")" class="btn btn-default btn"><span class="glyphicon glyphicon-pencil"></span> </a>
                    @Model.Transportadora.NOME                    
                </div>
                <div>
                    @Html.LabelFor(x => x.QualidadeComercial):&nbsp;
                    <a href="@Url.Action("QualidadeComercial", "Cadastro")" class="btn btn-default btn"><span class="glyphicon glyphicon-pencil"></span> </a>
                    @Model.QualidadeComercial.Key
                </div>
                
                <section id="ConclusaoForm">
                    @using (Html.BeginForm("ConclusaoPedido", "Pedido", null, FormMethod.Post, new { @class = "form-horizontal pull-left", role = "form" }))
                    {
                        @Html.AntiForgeryToken()

                        @Html.ValidationSummary(false, "", new { @class = "text-danger" })

                        if (Model.IDTipoPedido != (int)Enums.TiposPedido.RESERVA)
                        {
                            <div class="form-group">
                                @Html.LabelFor(x => x.Moedas, new { @class = "col-md-3 control-label" })
                                <div class="col-md-9">
                                    @Html.DropDownListFor(m => m.IDMoedas, new SelectList(Model.Moedas, "CODIGOMOEDA", "NOMEMOEDA"), "Selecione", new { @id = "lstMoedas" })
                                    @Html.ValidationMessageFor(m => m.IDMoedas, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(x => x.CondicoesPagto, new { @class = "col-md-3 control-label" })
                                <div class="col-md-9">
                                    @Html.DropDownListFor(m => m.IDCondicoesPagto, new SelectList(Model.CondicoesPagto, "ID_COND", "DESCRI_COND"), "Selecione", new { @id = "lstTiposPgto" })
                                    @Html.ValidationMessageFor(m => m.IDCondicoesPagto, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(x => x.CanaisVenda, new { @class = "col-md-3 control-label" })
                                <div class="col-md-9">
                                    @Html.DropDownListFor(m => m.IDCanaisVenda, new SelectList(Model.CanaisVenda, "CANAL_VENDA", "DESCRICAO"), "Selecione", new { @id = "lstCanaisVenda" })
                                    @Html.ValidationMessageFor(m => m.IDCanaisVenda, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(x => x.ViasTransporte, new { @class = "col-md-3 control-label" })
                                <div class="col-md-9">
                                    @Html.DropDownListFor(m => m.IDViasTransporte, new SelectList(Model.ViasTransporte, "VIATRANSPORTE", "DESCRICAO"), "Selecione", new { @id = "lstViasTransp" })
                                    @Html.ValidationMessageFor(m => m.IDViasTransporte, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(x => x.Fretes, new { @class = "col-md-3 control-label" })
                                <div class="col-md-9">
                                    @Html.DropDownListFor(m => m.IDFretes, new SelectList(Model.Fretes, "TIPOFRETE", "DESCRICAO"), "Selecione", new { @id = "lstFretes" })
                                    @Html.ValidationMessageFor(m => m.IDFretes, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            @*<div class="form-group">
                                    @Html.LabelFor(x => x.LocaisVenda, new { @class = "col-md-3 control-label" })
                                    <div class="col-md-9">
                                        @Html.DropDownListFor(m => m.IDLocaisVenda, new SelectList(Model.LocaisVenda, "CODIGO", "DESCRICAO"), "Selecione", new { @id = "lstLocaisVenda" })
                                        @Html.ValidationMessageFor(m => m.IDLocaisVenda, "", new { @class = "text-danger" })
                                    </div>
                                </div>*@

                            @*<div class="form-group" id="elemGerentes">
                                    @Html.LabelFor(x => x.GerentesVenda, new { @class = "col-md-3 control-label" })
                                    <div class="col-md-9">
                                        @Html.DropDownListFor(m => m.IDGerentesVenda, new SelectList(Model.GerentesVenda, "GERENTE", "DESCRICAO"), "Selecione", new { @id = "lstGerentes" })
                                        @Html.ValidationMessageFor(m => m.IDGerentesVenda, "", new { @class = "text-danger" })
                                    </div>
                                </div>*@

                            <div class="form-group">
                                @Html.LabelFor(x => x.TiposAtendimento, new { @class = "col-md-3 control-label" })
                                <div class="col-md-9">
                                    @Html.DropDownListFor(m => m.IDTiposAtendimento, new SelectList(Model.TiposAtendimento, "COD_ATEND", "DESCRI_ATEND"), "Selecione", new { @id = "lstTiposAtendimento" })
                                    @Html.ValidationMessageFor(m => m.IDTiposAtendimento, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        }

                        <div class="form-group">
                            @Html.LabelFor(x => x.PedidoCliente, new { @class = "col-md-3 control-label" })
                            <div class="col-md-9">
                                @Html.TextBoxFor(x => x.PedidoCliente, new { @class = "form-control" })
                                @Html.ValidationMessageFor(x => x.PedidoCliente, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        
                        <div class="form-group">
                            @Html.LabelFor(x => x.Observacoes, new { @class = "col-md-3 control-label" })
                            <div class="col-md-9">
                                @Html.TextAreaFor(x => x.Observacoes, 0, 0, new { @style = "width:100%; Height:90px;" })
                                @Html.ValidationMessageFor(m => m.Observacoes, "", new { @class = "text-danger" })
                            </div>
                        </div>                                                                                                                                  
                        <hr />                        
                        <div class="form-group">
                            <div class="col-md-12">
                                @Html.HiddenFor(x => x.IDTipoPedido)

                                <input type="submit" value="PROSSEGUIR" class="btn btn-default pull-left" />
                                <span class="pull-left">&nbsp;</span>
                                @if (Model.IDTipoPedido != (int)Enums.TiposPedido.RESERVA)
                                {
                                    @Html.ActionLink("VOLTAR", "Transportadora", "Cadastro", new { IDTransportadora = Model.Transportadora.IDTRANSPORTADORA }, new { @class = "btn btn-default btn-warning pull-left" })
                                }
                                else
                                {
                                    <div><p>Deseja realmente concluir este pedido?</p></div>
                                    @Html.ActionLink("VOLTAR", "ClientesFatura", "Cadastro", new { IDRepresentante = Model.Representante.IDREPRESENTANTE, IDClienteFatura = Model.ClienteFatura.ID_CLIENTE }, new { @class = "btn btn-default btn-warning pull-left" })
                                }
                            </div>
                        </div>
                        }
                </section>
            }
            else
            {
                <h5>Seu carrinho está vazio.</h5>
                @Html.ActionLink("Ir para a página inicial", "Index", "Home", null, new { @class = "btn btn-default btn-info pull-left" })
            }
        </div>
    </div>
    @if (!ViewBag.CarrinhoVazio && Model.IDTipoPedido != (int)Enums.TiposPedido.RESERVA)
    {
        <hr />

        <table id="listaCarrinho">
            <thead>
                <tr>                    
                    <th data-field="Artigo" data-sortable="true">Artigo</th>
                    <th data-field="Tecnologia" data-sortable="true">Tecnologia</th>
                    <th data-field="Desenho" data-sortable="true">Desenho</th>
                    <th data-field="Variante" data-sortable="true">Variante</th>
                    <th data-field="Compose" data-sortable="true">Compose</th>
                    <th data-field="Pecas" data-sortable="true">Peças</th>
                    <th data-field="UnidadeMedida" data-sortable="true">UM</th>
                    <th data-field="Quantidade" data-sortable="true">Qtde</th>
                    <th data-field="PrecoTabela" data-sortable="true" data-formatter="scriptWrapper.currencyFormatter">Preço tabela</th>
                    <th data-field="Preco" data-sortable="true" data-formatter="scriptWrapper.currencyFormatter">Unit.</th>
                    <th data-field="ValorTotalItem" data-sortable="true" data-formatter="scriptWrapper.currencyFormatter">Sub total</th>
                </tr>
            </thead>
            <tfoot>
                <tr>
                    <th>QUANTIDADE DE ITENS:</th>
                    <th id="thQuantidadeItens"></th>
                    <th></th>
                    <th colspan="4"></th>
                    <th><strong>TOTAL:</strong></th>
                    <th>@Model.TotalPedido.ToString("c")</th>
                </tr>
            </tfoot>
        </table>
    }
</div>
@section Scripts {
    @Scripts.Render("~/bundles/bootstrap-table")
    <script>
        $(document).ready(function () {
            //API
            scriptWrapper = (function () {

                //API Attributes

                //API Methods
                lstCanais_Change = function () {
                    if ($("#lstCanaisVenda > option:selected").attr("value") == 4) {
                        $('#elemGerentes').show();
                    }
                    else {
                        $('#elemGerentes').hide();
                    }
                }

                currencyFormatter = function (value) {
                    if (value != null)
                    {
                        return 'R$ ' + value.toFixed(2).replace('.', ',');
                    }
                    else
                    {
                        return 'R$ -';
                    }
                }

                // public API
                return {
                    lstCanais_Change: lstCanais_Change,
                    currencyFormatter: currencyFormatter
                };
            })();

            //Init
            (function Init() {
                $('#lstQualidades').selectpicker();
                $('#lstTiposPgto').selectpicker();
                $('#lstMoedas').selectpicker();
                $('#lstFretes').selectpicker();
                $('#lstLocaisVenda').selectpicker();
                $('#lstCanaisVenda').selectpicker();
                $('#lstCanaisVenda').change(lstCanais_Change);
                $('#lstGerentes').selectpicker();
                $('#lstTiposAtendimento').selectpicker();
                $('#lstViasTransp').selectpicker();
                $('#elemGerentes').hide();

                $('#listaCarrinho').bootstrapTable({
                    url: 'ObterItensCarrinho',
                    method: 'GET',
                    onLoadSuccess: function (data) {
                        $("#thQuantidadeItens").html(data.length);
                    },
                });
            })();
        });
    </script>
    }
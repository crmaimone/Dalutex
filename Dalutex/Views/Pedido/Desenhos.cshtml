@model Dalutex.Models.DesenhosViewModel

@using Dalutex.Models;
@using Dalutex.Models.DataModels;

@{
    if(Model.IDColecao > 0)
    {
        ViewBag.Title = "ITENS DA COLEÇÃO: " + Model.NMColecao;
    }
    else
    {
        ViewBag.Title = Model.NMColecao;/*desenhos, etc..*/
    }
}

<div class="header-title"><h3>@ViewBag.Title</h3></div>
<div class="container-fluid">
    <ul class="nav nav-tabs">
        <li role="presentation" class="active"><a href="#">ESTAMPADOS</a></li>
        <li role="presentation"><a href="@Url.Content(@"Lisos?" +
                    "&IDColecao=" + @Model.IDColecao +
                    "&NMColecao=" + @Model.NMColecao +
                    "&pagina=" + @Model.Pagina)">LISOS</a></li>
    </ul>
    
    <div class="row-fluid" id="pesqDesenho">
       @using (Html.BeginForm("Desenhos", "Pedido", null, FormMethod.Post, new { role = "search" }))
       {
            @Html.AntiForgeryToken()
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            <div class="form-group" >
                <div>
                    @Html.TextBoxFor(x => x.FiltroDesenho, new { @class = "form-control", @style="display:inline", placeholder = "Começa com.." })
                    <button type="submit" class="btn btn-default btn-group-sm"><span class="glyphicon glyphicon-search" aria-hidden="true"></span> Pesquisar</button>
                </div>

                <input type="hidden" name="IDColecao" value="@Model.IDColecao" />
                <input type="hidden" name="NMColecao" value="@Model.NMColecao" />
                <input type="hidden" name="Pagina" value="@Model.Pagina" />
            </div>
       }
    </div>
    
    <div class="row">
        @if (Model.Galeria != null)
        {
            foreach (DesenhoVariante item in Model.Galeria)
            {
                <div class="col-sm-4 col-md-2">

                    @Html.Partial(
                        "_Thumb",
                        new Dalutex.Models.ThumbViewModel()
                        {
                            Tipo = Enums.ItemType.Estampado,
                            Desenho = item.Desenho,
                            Variante = item.Variante,
                            UrlImagens = Model.UrlImagens,
                            Reduzido = 0,
                            Cor = null,
                            RGB = null,
                            IDColecao = Model.IDColecao,
                            NMColecao = Model.NMColecao,
                            Pagina = Model.Pagina,
                            CodStudio = null,
                            CodDal = null,
                            IDStudio = 0,
                            IDItemStudio = 0
                        })

                </div>
            }
        }
    </div>

    <nav>
        <ul class="pagination">
            @if (Model.Galeria != null)
            {
                if (Model.Pagina > 1)
                {
                    <li>
                        <a href="@Url.Action("Desenhos", "Pedido", new { idcolecao = Model.IDColecao, nmcolecao = Model.NMColecao, filtro = Model.FiltroDesenho, pagina = Model.Pagina - 1, totalpaginas = Model.TotalPaginas })" aria-label="Anterior">
                            <span aria-hidden="true">&laquo;</span>
                        </a>
                    </li>
                }
                else
                {
                    <li class="disabled">
                        <a href="#" aria-label="Anterior">
                            <span aria-hidden="true">&laquo;</span>
                        </a>
                    </li>
                }
                int iComecar = Model.Pagina <= 5 ? 1 : Model.Pagina - 5;
                for (int i = iComecar; i <= Model.TotalPaginas; i++)
                {
                    if (Model.Pagina == i)
                    {
                        <li class="active"><a href="@Url.Action("Desenhos", "Pedido", new { idcolecao = Model.IDColecao, nmcolecao = Model.NMColecao, filtro = Model.FiltroDesenho, pagina = i, totalpaginas = Model.TotalPaginas})">@i</a></li>
                    }
                    else
                    {
                        <li><a href="@Url.Action("Desenhos", "Pedido", new { idcolecao = Model.IDColecao, nmcolecao = Model.NMColecao, filtro = Model.FiltroDesenho, pagina = i, totalpaginas = Model.TotalPaginas})">@i</a></li>
                    }
                    if (i == iComecar + 9)
                    {
                        break;
                    }
                }
                if (Model.Pagina < Model.TotalPaginas)
                {
                    <li>
                        <a href="@Url.Action("Desenhos", "Pedido", new { idcolecao = Model.IDColecao, nmcolecao = Model.NMColecao, filtro = Model.FiltroDesenho, pagina = Model.Pagina + 1, totalpaginas = Model.TotalPaginas})" aria-label="Próxima">
                            <span aria-hidden="true">&raquo;</span>
                        </a>
                    </li>
                }
                else
                {
                    <li class="disabled">
                        <a href="#" aria-label="Próxima">
                            <span aria-hidden="true">&raquo;</span>
                        </a>
                    </li>
                }
            }
        </ul>
    </nav>
    <hr>
    <a class="btn btn-default right" href="javascript:history.back()">VOLTAR</a>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/equalheight")
    <script>
        $(document).ready(function () {
            //API
            scriptWrapper = (function () {

                //API Attributes

                //API Methods
                @*loadImages = function () {
                    $(".img-thumbnail").each(function () {
                        var $img = $(this);
                        var data = $img.data("assigned-id").split("_");
                        var desenho = data[0];
                        var variante = data[1];

                        $.ajax({
                            type: 'POST',
                            url: '@Url.Action("ObterDesenho", "Pedido")',
                            data: 'desenho=' + desenho + '&variante=' + variante,
                            async: false,
                            success: function (Image) {
                                if (Image != '') {
                                    $img.attr('src', 'data:image/jpg;base64,' + Image.Image);
                                }
                            },
                            error: function (xhr, ajaxOptions, thrownError) {
                                $img.attr('src', 'data:image/jpg;base64,');
                            }
                        })
                    });
                }*@

                // public API
                return {
                    //loadImages: loadImages
                };
            })();

            //Init
            (function Init() {
                $('.equal-height').equalHeight();
            })();
        });
    </script>
}

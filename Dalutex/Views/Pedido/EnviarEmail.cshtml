@model Dalutex.Models.EnviarEmailViewModel
@using Dalutex.Models;

@{
    ViewBag.Title = "ENVIAR E-MAIL";
}

<div class="header-title"><h3>@ViewBag.Title</h3></div>
@if (ViewBag.SendResult == null)
{
    <div class="container">
        <div class="row">
            <div class="col-md-8">
                @using (Html.BeginForm("EnviarEmail", "Pedido", null, FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
                {
                    <fieldset>
                        <div class="form-group" hidden>
                            @Html.LabelFor(x => x.De, new { @class = "col-md-4 control-label" })
                            <div class="col-md-8">
                                @Html.TextBoxFor(model => model.De, new { @class = "form-control", placeholder = "dalutex@dalutex.com.br" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(x => x.Para, new { @class = "col-md-4 control-label" })
                            <div class="col-md-8">
                                @Html.TextBoxFor(model => model.Para, new { @class = "form-control", placeholder = "Separe os contatos com ';'" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(x => x.ComCopia, new { @class = "col-md-4 control-label" })
                            <div class="col-md-8">
                                @Html.TextBoxFor(model => model.ComCopia, new { @class = "form-control", placeholder = "Separe os contatos com ';'" })
                            </div>
                        </div>                        
                        <div class="form-group" hidden>
                            @Html.LabelFor(x => x.Titulo, new { @class = "col-md-4 control-label" })
                            <div class="col-md-8">
                                @Html.TextBoxFor(model => model.Titulo, new { @class = "form-control", placeholder = "" })
                            </div>
                        </div>
                        <div class="form-group" hidden>
                            @Html.LabelFor(x => x.Conteudo, new { @class = "col-md-4 control-label" })
                            <div class="col-md-8">
                                @Html.TextAreaFor(model => model.Conteudo, new { @class = "form-control", placeholder = "" })
                            </div>
                        </div>
                        @Html.HiddenFor(model => model.ChaveAnexo)
                        <div class="form-group col-md-9">
                            <button class="btn btn-default pull-right" style="margin-left:5px;" data-type="submit"><span class="glyphicon glyphicon-envelope" aria-hidden="true"></span> ENVIAR</button>
                            <button class="btn btn-default pull-right" onclick="javascript: history.back()"><span class="glyphicon glyphicon-arrow-left" aria-hidden="true"></span> VOLTAR</button>
                        </div>
                    </fieldset>
            }
            </div>
        </div>
    </div>
}
else
{
    <div class="container">
        <div class="row warning">
            @ViewBag.SendResult
        </div>
        <br />
        <div class="row">
            <a href="@Url.Action("Index", "Home")" class="btn btn-info pull-left">
                <span class="glyphicon glyphicon-home" aria-hidden="true"></span>&nbsp;IR PARA A PÁGINA INICIAL
            </a>
            <span class="pull-left">&nbsp;</span>
            <a href="@Url.Action("PesquisaPedido", "Pedido")" class="btn btn-default pull-left">
                <span class="glyphicon glyphicon-th-list" aria-hidden="true"></span>&nbsp;PEDIDOS
            </a>
        </div>
    </div>
}

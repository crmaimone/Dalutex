@model Dalutex.Models.InserirNoCarrinhoViewModel
@using Dalutex.Models;

@{
    ViewBag.Title = "ADICIONAR AO CARRINHO";
}
<div class="panel panel-default">
    <h3>@ViewBag.Title</h3>
</div>

<div>
    @if (Model.Tipo == Enums.ItemType.Estampado)
    {
        <h5>ARTIGO: @Model.Artigo | TECNOLOGIA: @Model.TecnologiaPorExtenso | DESENHO: @Model.Desenho | VARIANTE: @Model.Variante</h5>
    }
    else if (Model.Tipo == Enums.ItemType.Liso)
    {
        <h5>ARTIGO: @Model.Artigo | TECNOLOGIA: @Model.TecnologiaPorExtenso | COR: @Model.Cor</h5>
    }
    else if (Model.Tipo == Enums.ItemType.Reserva)
    {
        <div class="panel panel-default" id="pnreserva">               
            <p><strong> Código de Studio:</strong> @Model.CodStudio</p>
            <p><strong> Código Dal: </strong>@Model.CodDal</p>
            <p><strong> Desenho: </strong>@Model.Desenho</p>               
        </div>
    }
</div>

<hr/>

<div class="container">
    <div class="row">
        <div class="col-md-8">
            <section id="InserirCarrinhoForm">
                @using (Html.BeginForm("InserirNoCarrinho", "Pedido", null, FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
                {
                    @Html.AntiForgeryToken()
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    
                    if (Model.Tipo != Enums.ItemType.Reserva)
                    {
                        if (Model.ObterTipoPedido)
                        {
                            <div class="form-group">
                                @Html.LabelFor(x => x.IDTipoPedido, new { @class = "col-md-4 control-label" })
                                <div class="col-md-8">
                                    @Html.DropDownListFor(m => m.IDTipoPedido, new SelectList(Model.TiposPedido, "TIPOPEDIDO", "DESCRICAO"), "Selecione", new { @id = "lstTiposPedido" })
                                    @Html.ValidationMessageFor(m => m.IDTipoPedido, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        }
                        <hr />
                        <div class="form-group">
                            @Html.LabelFor(x => x.Pecas, new { @class = "col-md-4 control-label" })
                            <div class="col-md-8">
                                @if (Model.IDTipoPedido == 0)
                                {
                                    @Html.TextBoxFor(x => x.Pecas, new { id = "txtPecas", @class = "form-control", @placeholder = "Qtde de Peças" })
                                }
                                else
                                {
                                    @Html.TextBoxFor(x => x.Pecas, new { id = "txtPecas", disabled = "disabled", @class = "form-control", @placeholder = "Qtde de Peças" })
                                }

                                @Html.ValidationMessageFor(m => m.Pecas, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(x => x.Quantidade, new { @class = "col-md-4 control-label", id = "lblQuantidade" })
                            <div class="col-md-8">
                                @if (Model.IDTipoPedido == 0)
                                {
                                    @Html.TextBoxFor(x => x.Quantidade, new { id = "txtQuantidade", disabled = "disabled", @class = "form-control" })
                                }
                                else
                                {
                                    @Html.TextBoxFor(x => x.Quantidade, new { id = "txtQuantidade", @class = "form-control" })
                                }
                                @Html.ValidationMessageFor(m => m.Quantidade, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(x => x.Preco, new { @class = "col-md-4 control-label", @placeholder = "Valor Unitário" })
                            <div class="col-md-8">
                                @Html.TextBoxFor(x => x.Preco, new { id = "txtPreco", @class = "form-control" })
                                @Html.ValidationMessageFor(m => m.Preco, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    }
                    else
                    {
                        <h5>Clique em INCLUIR para adicionar este desenho ao carrinho.</h5>
                    }

                    @Html.HiddenFor(x => x.Tipo);
                    @Html.HiddenFor(x => x.Desenho)
                    @Html.HiddenFor(x => x.Variante)
                    @Html.HiddenFor(x => x.Artigo)
                    @Html.HiddenFor(x => x.TecnologiaPorExtenso)
                    @Html.HiddenFor(x => x.Reduzido)
                    @Html.HiddenFor(x => x.Modo);
                    @Html.HiddenFor(x => x.IDColecao);
                    @Html.HiddenFor(x => x.IDTipoPedido);
                    @Html.HiddenFor(x => x.NMColecao);
                    @Html.HiddenFor(x => x.Pagina);
                    @Html.HiddenFor(x => x.Cor);
                    @Html.HiddenFor(x => x.RGB);
                    @Html.HiddenFor(x => x.CodStudio);
                    @Html.HiddenFor(x => x.CodDal);
                    @Html.HiddenFor(x => x.IDStudio);
                    @Html.HiddenFor(x => x.IDItemStudio);
                    @Html.HiddenFor(x => x.UnidadeMedida, new { id = "hidUM" })
                    @Html.HiddenFor(x => x.ValorPadrao, new { id = "hidValPadrao" })

                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            @*<input type="submit" value="INCLUIR" class="btn btn-default" />*@
                            
                            <div class="col-xs-6">
                                <button type="submit" class="btn btn-default right"><span class="glyphicon glyphicon-arrow-down" aria-hidden="true"></span> INCLUIR</button>
                            </div>                                                                                                               

                            @if (Model.Modo == "I")
                            {
                                if (Model.Tipo == Enums.ItemType.Estampado)
                                {
                                    @Html.ActionLink("VOLTAR", "ArtigosDisponiveis", "Pedido",
                                    new
                                    {
                                        desenho = Model.Desenho,
                                        variante = Model.Variante,
                                        idcolecao = Model.IDColecao,
                                        nmcolecao = Model.NMColecao,
                                        pagina = Model.Pagina
                                    },
                                    new { @class = "btn btn-default right" })
                                }
                                else if (Model.Tipo == Enums.ItemType.Liso)
                                {
                                    @Html.ActionLink("VOLTAR", "Lisos", "Pedido",
                                    new
                                    {
                                        idcolecao = Model.IDColecao,
                                        nmcolecao = Model.NMColecao,
                                        pagina = Model.Pagina
                                    },
                                    new { @class = "btn btn-default right" })
                                }
                                else if (Model.Tipo == Enums.ItemType.Reserva)
                                {
                                    @Html.ActionLink("VOLTAR", "ItensParaReserva", "Pedido",
                                    new
                                    {
                                        pagina = Model.Pagina
                                    },
                                    new { @class = "btn btn-default right" })
                                }
                            }
                            else if (Model.Modo == "A")
                            {
                                @Html.ActionLink("VOLTAR", "Carrinho", "Pedido", null, new { @class = "btn btn-default right" })
                            }
                        </div>
                    </div>
                }
            </section>
        </div>
    </div>
</div>@section Scripts {
    <script>
        $(document).ready(function () {
            //API
            scriptWrapper = (function () {

                //API Attributes
                txtPecas_Blur = function()
                {
                    var $txtPecas = $("#txtPecas");
                    var $txtQuantidade = $("#txtQuantidade");
                    var $hidPadrao = $("#hidValPadrao");

                    if (isNaN($txtPecas.val())) {
                        $txtQuantidade.val(0);
                        return;
                    }

                    if (isNaN($hidPadrao.val())) {
                        $txtQuantidade.val(0);
                        return;
                    }

                    $txtQuantidade.val($txtPecas.val() * $hidPadrao.val());
                }

                lstTiposPedido_Change = function () {
                    if ($("#lstTiposPedido > option:selected").attr("value") != "0") {
                        $("#txtPecas").val("0")
                        $("#txtPecas").prop('disabled', true);
                        $("#txtQuantidade").prop('disabled', false);
                    }
                    else {
                        $("#txtQuantidade").val("0")
                        $("#txtPecas").prop('disabled', false);
                        $("#txtQuantidade").prop('disabled', true);
                    }
                }

                //API Methods

                // public API
                return {
                    txtPecas_Blur: txtPecas_Blur,
                    lstTiposPedido_Change: lstTiposPedido_Change
                };
            })();

            //Init
            (function Init() {
                $('#lstTiposPedido').selectpicker();
                $("#lblQuantidade").text($("#hidUM").val());
                $("#txtPecas").blur(this.txtPecas_Blur);
                
                $("#txtPecas").focus(function () {
                    this.select();
                });
                $("#txtPreco").focus(function () {
                    this.select();
                });
                $('#lstTiposPedido').on('change', scriptWrapper.lstTiposPedido_Change);
            })();
        });
    </script>
}
@model Dalutex.Models.MenuColecoesViewModel
@using Dalutex.Models.DataModels

@{ViewBag.Title = "MENU DE COLEÇÕES";}

<div class="header-title">
    <h3>@ViewBag.Title</h3>
</div>


    <div class="panel panel-default" id="pncol">
        <div class="container-fluid">            
            <ul class="nav nav-pills">
                <li role="presentation" class="active"></li>
                <li role="presentation" class="active"></li>                
            </ul>                                   
        </div>
        
        <div class="row">
            <div class="col-md-12">
                <div class="container-fluid">
                    @using (Html.BeginForm("MenuColecoes", "Pedido", null, FormMethod.Post, new { @class = "navbar-form navbar-left", role = "search" }))
                    {
                        @Html.AntiForgeryToken()
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })


                        <div class="form-group pull-left">
                            <div style="display:inline-flex">
                                @Html.TextBoxFor(x => x.Filtro, new { @class = "form-control", placeholder = "PESQUISA COLEÇÃO", style="height:37px;" })
                                <button type="submit" class="btn btn-default" style="margin-left:5px; margin-bottom:3px"><span class="glyphicon glyphicon-search" aria-hidden="true"></span> Localizar</button>
                            </div>
                        </div>


                        <div>
                            <br />
                            <div style="display:-webkit-inline-box">
                                <a href="@Url.Action("Desenhos", "Pedido", new { idcolecao = "ATUAL", nmcolecao = "ATUAL" })" class="btn btn-info">Coleção Atual</a>
                                <a href="@Url.Action("Desenhos", "Pedido", new { idcolecao = "POCKET", nmcolecao = "POCKET" })" class="btn btn-info">Pocket Atual</a>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div> 
    
    @if (@Model != null && @Model.Colecoes != null)
    {
        <div class="row">
            <div class="col-md-6">
                <section id="ResultadoColecoes">
                    <div class="list-group">
                        <a href="#" class="list-group-item active">COLEÇÕES</a>
                        @if (@Model != null && @Model.Colecoes != null)
                        {
                            foreach (VW_COLECAO item in Model.Colecoes)
                            {
                                <a href="@Url.Action("Desenhos", "Pedido", new { idcolecao = item.ID_COLECAO, nmcolecao = item.NOME_COLECAO })" class="list-group-item"><strong>@item.NOME_COLECAO.Trim()</strong> - LANÇTO: @item.LANCAMENTO.Value.ToString("dd/MM/yy") | VIG: @item.VIGENCIA.Value.ToString("dd/MM/yy") </a>
                            }
                        }
                        else
                        {
                            <p class="list-group-item"><em>UTILIZE O FILTRO PARA LOCALIZAR AS COLEÇÕES</em></p>
                        }
                    </div>
                </section>
            </div>
        </div>
    }
            
    <nav>
        <ul class="pagination">
            @if (Model.Colecoes != null)
            {
                if (Model.Pagina > 1)
                {
                    <li>
                        <a href="@Url.Action("MenuColecoes", "Pedido", new { nmcolecao = Model.Filtro, pagina = Model.Pagina - 1, totalpaginas = Model.TotalPaginas })" aria-label="Anterior">
                            <span aria-hidden="true">&laquo;</span>
                        </a>
                    </li>
                }
                else
                {
                    <li class="disabled">
                        <a href="#" aria-label="Anterior">
                            <span aria-hidden="true">&laquo;</span>
                        </a>
                    </li>
                }

                int iComecar = Model.Pagina <= 5 ? 1 : Model.Pagina - 5;
                for (int i = iComecar; i <= Model.TotalPaginas; i++)
                {
                    if (Model.Pagina == i)
                    {
                        <li class="active"><a href="@Url.Action("MenuColecoes", "Pedido", new { nmcolecao = Model.Filtro, pagina = i, totalpaginas = Model.TotalPaginas })">@i</a></li>
                    }
                    else
                    {
                        <li><a href="@Url.Action("MenuColecoes", "Pedido", new { nmcolecao = Model.Filtro, pagina = i, totalpaginas = Model.TotalPaginas })">@i</a></li>
                    }
                    if (i == iComecar + 9)
                    {
                        break;
                    }
                }
                if (Model.Pagina < Model.TotalPaginas)
                {
                    <li>
                        <a href="@Url.Action("MenuColecoes", "Pedido", new { nmcolecao = Model.Filtro, pagina = Model.Pagina + 1, totalpaginas = Model.TotalPaginas })" aria-label="Próxima">
                            <span aria-hidden="true">&raquo;</span>
                        </a>
                    </li>
                }
                else
                {
                    <li class="disabled">
                        <a href="#" aria-label="Próxima">
                            <span aria-hidden="true">&raquo;</span>
                        </a>
                    </li>
                }
            }
        </ul>
    </nav>
